{"version":3,"sources":["types/types.js","actions/ui.js","firebase/firebaseConfig.js","helpers/loadNotes.js","helpers/uploadFile.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/routers/PrivateRoute.js","components/routers/PublicRoute.js","components/routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["types","setError","error","type","payload","removeError","finishLoading","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","a","collection","get","notesSnapshot","notes","forEach","snap","push","id","data","uploadFile","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","addNote","note","activateNote","setNotes","startLoadingNotes","dispatch","startSaveNote","getState","url","noteToFirestore","doc","update","updateNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","useSelector","state","ui","msgError","loading","formValues","isFormValid","validator","isEmail","length","className","onSubmit","preventDefault","placeholder","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","NotesAppBar","active","style","display","files","activeNote","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","document","getElementById","click","NoteScreen","activeId","useRef","useEffect","current","autoComplete","delete","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","entries","map","entry","Sidebar","signOut","newNote","Date","getTime","add","docRef","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.dbf1630a.chunk.js","sourcesContent":["export const types = {\r\n\r\n    login: '[Auth] login',\r\n    logout: '[Auth] logout',\r\n    \r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    \r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdate: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning'\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const setError = (error) => ({\r\n    type: types.uiSetError,\r\n    payload: error\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n \r\n//test\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db, \r\n    googleAuthProvider,\r\n    firebase\r\n}","import { db } from \"../firebase/firebaseConfig\"\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    \r\n    const notesSnapshot = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnapshot.forEach( snap => {\r\n        notes.push({\r\n            id: snap.id,\r\n            ...snap.data()\r\n        });\r\n    })\r\n\r\n    return notes;\r\n}","\r\nexport const uploadFile = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dengbtgzo/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try{\r\n        \r\n        const resp = await fetch (cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    } catch(error){\r\n        throw error;\r\n    }\r\n}","import Swal from 'sweetalert2'\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\nimport { uploadFile } from \"../helpers/uploadFile\"\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime(),\r\n        }\r\n\r\n        const docRef = await db.collection(`${uid}/journal/notes`).add(newNote);   \r\n\r\n        dispatch( activateNote( docRef.id, newNote ));\r\n        dispatch( addNote( docRef.id, newNote) );\r\n    }\r\n}\r\n\r\nexport const addNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\nexport const activateNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n        const notes = await loadNotes( uid );\r\n        \r\n        dispatch( setNotes( notes ));\r\n    }\r\n}\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url ){\r\n            delete note.url;\r\n        }\r\n\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update( noteToFirestore)\r\n\r\n        dispatch( updateNote( note.id, note ));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const updateNote = ( id, note ) => {\r\n    return {\r\n        type: types.notesUpdate,\r\n        payload: {\r\n            note, \r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n        \r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await uploadFile( file );\r\n        \r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ));\r\n        \r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleteNote = ( ) => {\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        const { active:activeNote } = getState().notes;\r\n        const { title } = activeNote;\r\n\r\n        Swal.fire({\r\n            title: 'Deleting...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        // Delete from firebase\r\n        await db.doc(`${uid}/journal/notes/${activeNote.id}`).delete();\r\n        \r\n        // Delete from the store\r\n        dispatch(deleteNote(activeNote.id));\r\n\r\n        Swal.close();\r\n        Swal.fire('Deleted', title, 'success');\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const logoutCleaning = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { firebase, googleAuthProvider } from '../firebase/firebaseConfig'\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { types } from '../types/types'\r\nimport { finishLoading, startLoading } from './ui'\r\nimport { logoutCleaning } from './notes'\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n            .then(({ user }) => {\r\n                dispatch( login (user.uid, user.displayName));\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch( e => {\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n\r\n    return (dispatch) => {\r\n        \r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then(async ({ user }) => {\r\n                \r\n                await user.updateProfile({ displayName: name});\r\n\r\n                dispatch( login(user.uid, user.displayName) );\r\n            })\r\n            .catch( e => {\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch( login(user.uid, user.displayName) );\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid, \r\n        displayName\r\n    }\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n        dispatch( logout() )\r\n        dispatch( logoutCleaning() )\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.logout\r\n})","import {\r\n    useState\r\n} from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n    const handleInputChange = ({\r\n        target\r\n    }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset]\r\n}","import React from 'react'\r\nimport validator from 'validator'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError, loading } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const { email, password } = formValues;\r\n\r\n    \r\n    const handleGoogleLogin = (e) => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n    \r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        if ( isFormValid() ){\r\n            dispatch( startLoginEmailPassword(email, password) );\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( !validator.isEmail( email ) ){\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n        }\r\n        if ( password.length === 0){\r\n            dispatch( setError('Password is required') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <h1 className=\"auth__title mb-5\">Login</h1>\r\n\r\n            <form \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n                onSubmit={ handleLogin }\r\n            >\r\n                {\r\n                    msgError && \r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"E-mail\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    value={email}\r\n                    onChange={ handleInputChange }                    \r\n                />\r\n\r\n                <input  \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    password={password}\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }    \r\n                >\r\n                    Login\r\n                </button>\r\n               \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with your fav social network</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img \r\n                                className=\"google-icon\" \r\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" \r\n                                alt=\"Sign in with Google\" \r\n                            />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with Google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                \r\n                <Link to=\"/auth/register\" className=\"link\">\r\n                    Not registered yet?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport validator from 'validator'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        name: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n    \r\n    const {\r\n        email,\r\n        name,\r\n        password,\r\n        password2\r\n    } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ){\r\n            dispatch ( startRegisterWithEmailPasswordName(email, password, name) )\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( !validator.isEmail( email ) ){\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n        }\r\n        if ( name.trim().length === 0 ){\r\n            dispatch( setError('Name is required') );\r\n            return false;\r\n        }\r\n        if ( password !== password2){\r\n            dispatch( setError('Password should match') );\r\n            return false;\r\n        }\r\n        if ( password.length < 5 ){\r\n            dispatch( setError('Password should be at least 6 char long') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"auth__title mb-5\">Sign up</h1>\r\n\r\n            <form \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n                onSubmit={ handleRegister }\r\n            >\r\n\r\n                {\r\n                    msgError && \r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"E-mail\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input  \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n\r\n                <input  \r\n                    type=\"password\"\r\n                    placeholder=\"Cofirm password\"\r\n                    name=\"password2\"\r\n                    value={password2}\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">\r\n                    Sign up\r\n                </button>\r\n               \r\n                <Link to=\"/auth/login\" className=\"link\">\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n\r\nimport { LoginScreen } from '../auth/LoginScreen';\r\nimport { RegisterScreen } from '../auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\r\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote(active) );\r\n    }\r\n\r\n    const handlePictureUplaod = () => {\r\n        document.getElementById('fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if (file){\r\n            dispatch( startUploading(file) );\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>14 august 2020</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange = { handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handlePictureUplaod}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activateNote, startDeleteNote } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector(state => state.notes);\r\n    const [ formValues, handleInputChange, reset ] = useForm(note);\r\n    const { body, title } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n    \r\n    useEffect(() => {\r\n        if ( note.id !== activeId.current ){\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch( activateNote( formValues.id, {...formValues}) );\r\n    }, [ formValues, dispatch ]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleteNote() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content mt-5\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    className=\"notes__title-input mb-5\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={ title }\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today?\"\r\n                    className=\"notes__text-area mb-5\"\r\n                    name=\"body\"\r\n                    value={ body }\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                {\r\n                    (note.url) && \r\n                        <div className=\"notes__image\">\r\n                            <img \r\n                                src={ note.url }\r\n                                alt=\"\" \r\n                            />   \r\n                        </div>\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger btn-block\"\r\n                onClick={ handleDelete }\r\n            >\r\n                <i className=\"fa fa-2x fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <h1>\r\n                Select something\r\n                <br />\r\n                pr create an entry!\r\n            </h1>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { activateNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const noteDate = moment(date);\r\n\r\n    const handleActivateNote = () => {\r\n\r\n        dispatch( \r\n            activateNote(id, {\r\n                date, title, body, url\r\n            })\r\n        );\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\" \r\n            onClick={handleActivateNote}\r\n        >\r\n            {\r\n                (url)\r\n                ? (\r\n                    <div \r\n                        className=\"journal__entry-picture\"\r\n                        style={{\r\n                            backgroundSize: 'cover',\r\n                            backgroundImage: `url(${url})`\r\n                        }}\r\n                    >\r\n                    </div>\r\n                )\r\n                :\r\n                (\r\n                    <div \r\n                        className=\"journal__entry-picture\"\r\n                        style={{\r\n                            backgroundSize: 'cover',\r\n                            backgroundImage: 'url(https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRd-y-IJN8glQlf1qoU01dEgGPUa0d1-sjfWg&usqp=CAU)'\r\n                        }}\r\n                    >\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('L')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes: entries} = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                entries.map (entry => (\r\n                    <JournalEntry key={entry.id} {...entry} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch ( startNewNote() );\r\n    }\r\n\r\n    const authState = useSelector( state => state.auth );\r\n    const { name } = authState;\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar mt-5\">\r\n                <h3>\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n\r\n                <button className=\"btn\" onClick={handleLogout}>\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x mb-5\"></i>\r\n                <p>New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n            \r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n//import { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n                { \r\n                    (active)\r\n                    ? <NoteScreen />\r\n                    : <NothingSelected />\r\n                }\r\n            </main>\r\n        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PrivateRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth\" /> )\r\n            )} \r\n        / >\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PublicRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )} \r\n        / >\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  \r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../journal/JournalScreen';\r\nimport { firebase } from '../../firebase/firebaseConfig' \r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged( async (user) => {\r\n            \r\n            if ( user?.uid ) {\r\n                dispatch( login(user.uid, user.displayName) );\r\n                setIsLoggedIn( true );\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n            }else{\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        });\r\n    \r\n    }, [ dispatch, setChecking, setIsLoggedIn ]);\r\n\r\n    if ( checking ) {\r\n        return (\r\n            <div className=\"preloader__container\">\r\n                <h1 className=\"preloader__title mb-5\">Loading...</h1>\r\n                <div className='preloader__preloader'></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        isAuthenticated={ isLoggedIn} \r\n                        path=\"/auth\" \r\n                        component={ AuthRouter } \r\n                    />\r\n                    <PrivateRoute\r\n                        isAuthenticated={ isLoggedIn } \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ JournalScreen } \r\n                    />\r\n\r\n                    <Redirect to=\"auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\n","/*\r\n    {\r\n        notes: [],\r\n        active: null,\r\n        active: {\r\n            id: 'KAJSASKJASJK',\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 12344566\r\n        }\r\n    }\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        \r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n            \r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdate: \r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return initialState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { \r\n    createStore, \r\n    combineReducers, \r\n    compose, \r\n    applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch ( action?.type ) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n    \r\n        case types.logout:\r\n            return { };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { AppRouter } from './components/routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}